java -jar /home/osboxes/spl/kmor/spline/web/target/spline-ui-0.3.9.exec.jar -Dspline.mongodb.url=mongodb://localhost:27017/spline



mvn test -Psamples -Dspline.mongodb.url=mongodb://localhost:27017/spline -DsampleClass=za.co.absa.spline.sample.batch.SampleJob1

spark2-shell --jars ./spline-bundle-2_2-0.3.9.jar,spark_catalysr.jar --properties-file ./spline.properties



spark2-shell --jars ./spline-bundle-2_2-0.3.9.jar,./spline-persistence-atlas-0.3.9.jar --properties-file ./spline.properties



kafka-topics --list --zookeeper ecsa00400b48.epam.com:2181


mvn test -Psamples -DsampleClass=za.co.absa.spline.sample.batch.SampleJob1



kafka-console-consumer --bootstrap-server ecsa00400926.epam.com:9092,ecsa00400927.epam.com:9092,ecsa00400b48.epam.com:9092  --topic ATLAS_HOOK --from-beginning

kafka-run-class kafka.tools.GetOffsetShell --broker-list ecsa00400926.epam.com:9092,ecsa00400927.epam.com:9092,ecsa00400b48.epam.com:9092 --topic ATLAS_HOOK --time -1


import za.co.absa.spline.core.SparkLineageInitializer._
import spark.implicits._
import org.apache.spark.sql.SaveMode

spark.enableLineageTracking()

val ddf = spark.read.option("header", "true").option("inferSchema", "true").csv("data/output/batch/java-sample.csv")
ddf.write.mode(SaveMode.Overwrite).csv("data/output/batch/java-sample2.csv")



docker run -it -v /home/osboxes/1/spline:/spline maven:3.6.3-jdk-8 bash

docker run -it -v /home/osboxes/1/spline:/spline maven:3.6.3-jdk-8-nodejs-6.9 bash


docker run -it  3.6.3-jdk-8-nodejs-6.9 bash


docker run -it maven:3.6.3-jdk-8-nodejs-6.9-clear bash


docker save maven:3.6.3-jdk-8-nodejs-6.9-clear | gzip > maven:3.6.3-jdk-8-nodejs-6.9-clear.tar.gz


docker build -t  maven:3.6.3-jdk-8-nodejs-12.13.1-clear .
docker run -it -v /home/osboxes/1/spline:/spline maven:3.6.3-jdk-8-nodejs-12.13.1-clear bash


docker run -it maven:3.6.3-jdk-8-nodejs-12.13.1-clear bash


https://github.com/AbsaOSS/spline/archive/release/0.4.0.zip


